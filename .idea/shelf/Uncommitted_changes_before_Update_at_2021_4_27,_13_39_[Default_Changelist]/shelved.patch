Index: okhttpdemo/src/main/java/com/awesome/okhttpdemo/okhttp/response/CommonCallback.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.awesome.okhttpdemo.okhttp.response;\n\nimport android.os.Handler;\nimport android.os.Looper;\nimport android.text.TextUtils;\n\nimport com.awesome.okhttpdemo.okhttp.exception.OkHttpException;\nimport com.awesome.okhttpdemo.okhttp.listener.DisposeDataHandle;\nimport com.awesome.okhttpdemo.okhttp.listener.DisposeDataListener;\nimport com.awesome.okhttpdemo.util.ResponseEntityToModule;\n\nimport org.jetbrains.annotations.NotNull;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\n\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.Response;\n\n/**\n * Author: JfangZ\n * Email: zhangjingfang@jeejio.com\n * Date: 2021/4/26 16:07\n * Description: 替换源码中的接口及方法\n * 替换源码接口类及其中的方法，防止源码中的接口名和接口中方法名改变\n * step1：创建一个新接口，创建替换旧接口的方法的新方法。\n * step2：创建一个实现类，实现旧接口，并复写旧接口方法\n * step3：操作这个实现类，创建一个属性为新接口，并在构造中赋值，在复写的方法中调用替换的新接口的方法\n * step4：使用实现类和新接口，可以向外抛出新接口对象，并在方法中创建实现类，构造中传入新街口对象\n */\npublic class CommonCallback implements Callback {\n    protected static final String RESULT_CODE = \"ecode\";\n    protected static final int RESULT_CODE_VALUE = 0;\n    protected static final String EMPTY_MSG = \"空空如也\";\n\n    protected static final int NETWORK_ERROR = 1;\n    protected static final int JSON_ERROR = 2;\n    protected static final int OTHER_ERROR = 3;\n    private DisposeDataListener mListener;\n    private Class<?> mClass;\n\n    private Handler mDeliveryHandler;\n\n    public CommonCallback(DisposeDataHandle disposeDataHandle) {\n        mListener = disposeDataHandle.getListener();\n        mClass = disposeDataHandle.getClazz();\n        mDeliveryHandler = new Handler(Looper.getMainLooper());\n    }\n\n    @Override\n    public void onFailure(@NotNull Call call, @NotNull IOException e) {\n        mDeliveryHandler.post(new Runnable() {\n            @Override\n            public void run() {\n                mListener.onFailure(new OkHttpException(NETWORK_ERROR, e));\n            }\n        });\n    }\n\n    @Override\n    public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {\n        String string = response.body().string();\n\n        mDeliveryHandler.post(new Runnable() {\n            @Override\n            public void run() {\n                handleResponse(string);\n            }\n        });\n    }\n\n\n    private void handleResponse(Object responseObj) {\n        if (responseObj == null || TextUtils.isEmpty(responseObj.toString().trim())) {\n            mListener.onFailure(new OkHttpException(NETWORK_ERROR, EMPTY_MSG));\n            return;\n        }\n        mListener.onSuccess(responseObj);\n        return;\n//        try {\n//            JSONObject result = new JSONObject(responseObj.toString());\n//            // 服务器协商部分\n////            if (result.has(RESULT_CODE) && result.getInt(RESULT_CODE) == RESULT_CODE_VALUE) {\n//                if (mClass == null) {\n//                    mListener.onSuccess(result);\n//                } else {\n//                    Object obj = ResponseEntityToModule.parseJsonObjectToModule(result, mClass);\n//                    if (obj != null) {\n//                        mListener.onSuccess(obj);\n//                    } else {\n//                        mListener.onFailure(new OkHttpException(JSON_ERROR, EMPTY_MSG));\n//                    }\n//                }\n////            }else {\n////                mListener.onFailure(new OkHttpException(OTHER_ERROR, EMPTY_MSG));\n////            }\n//        } catch (JSONException e) {\n//            mListener.onFailure(new OkHttpException(OTHER_ERROR, e.getMessage()));\n//            e.printStackTrace();\n//        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- okhttpdemo/src/main/java/com/awesome/okhttpdemo/okhttp/response/CommonCallback.java	(revision a7e97878a1185b97729f6e20ef16b7a87a572f6b)
+++ okhttpdemo/src/main/java/com/awesome/okhttpdemo/okhttp/response/CommonCallback.java	(date 1619501989000)
@@ -59,6 +59,7 @@
         });
     }
 
+
     @Override
     public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
         String string = response.body().string();
@@ -72,6 +73,10 @@
     }
 
 
+    /**
+     * 处理返回信息，不为空转化为json格式
+     * @param responseObj
+     */
     private void handleResponse(Object responseObj) {
         if (responseObj == null || TextUtils.isEmpty(responseObj.toString().trim())) {
             mListener.onFailure(new OkHttpException(NETWORK_ERROR, EMPTY_MSG));
